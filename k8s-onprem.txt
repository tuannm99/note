***** note

disable swap
install docker
install kubeadm, kubelet, kubectl

kubeadm init --pod-network-cidr=10.244.0.0/16  (ip need to be same as flannel configuration network)

// add network addon (callico | flannel) ===> used for pod, service,... communication.

kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
--  https://github.com/kubernetes/kubernetes/issues/70202
/run/flannel/subnet.env

FLANNEL_NETWORK=10.244.0.0/16
FLANNEL_SUBNET=10.244.0.1/24
FLANNEL_MTU=1450
FLANNEL_IPMASQ=true

- flannel with firewall enable
mkdir -p /opt/cni/bin
curl -O -L https://github.com/containernetworking/plugins/releases/download/v1.2.0/cni-plugins-linux-amd64-v1.2.0.tgz
tar -C /opt/cni/bin -xzf cni-plugins-linux-amd64-v1.2.0.tgz


** add-ons: k8s cannot work independence => we need other opensource for full features k8s cluster 
- cert-manager ==> opensource ssl
- flannel (as mentioned behind) | calico ==> networking
- ingress controller (ingress-nginx, kong-ingress, ...): use for managing ingress
- metallb ==> networking loadbalancer (layer3,4) (for traffic public ip to private ip, we really need it to expose cluster to the internet with Service Type = Loadbalancer)
- storage-class (sc) like openebs => dynamic volumne => auto assign pv to an pvc (no need creating volume, grant access and assign by hands)
- local dns -> service comunication using dns instead of ip

** helm -> package manager for k8s manifest (there are many operation that packaging by helm. We can take advatanges of it for deployment)



--------------COMAND--------------
Docker version 26.1.2, build 211e74b
Kubernetes v1.30.0
Client Version: v1.30.0

* pre-setup

1. Docker
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

2. K8s

sudo apt-get install -y apt-transport-https ca-certificates curl gpg
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

sudo systemctl enable --now kubelet

rm /etc/containerd/config.toml
systemctl restart containerd

3. then start init by using kubeadm


# some problems in kubelet and kubeadm or kubectl version make cluster shutdown. Fixed it --> Content of file /etc/containerd/config.toml
"""
version = 2
[plugins]
  [plugins."io.containerd.grpc.v1.cri"]
   [plugins."io.containerd.grpc.v1.cri".containerd]
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v2"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true

"""
